import webpack from 'webpack';
import { I as IncludeList, R as ResolvePluginInterface } from './types-DJ6BWlMt.js';

/**
 * ResolvePlugin is responsible for resolving paths for
 * specific browser extension api calls. It works by
 * adding a loader to the webpack configuration that
 * transforms the API calls to use the resolver module.
 *
 * The resolver module is responsible for resolving the
 * paths based on the manifest.json file and compilation
 * context.
 *
 * APIs supported:
 * - chrome.action.setIcon
 * - chrome.browserAction.setIcon
 * - chrome.pageAction.setIcon
 * - chrome.action.setPopup
 * - chrome.browserAction.setPopup
 * - chrome.pageAction.setPopup
 * - chrome.scriptBadge.setPopup
 * - chrome.devtools.panels.create
 * - chrome.downloads.download
 * - chrome.runtime.getURL
 * - chrome.scripting.insertCSS
 * - chrome.scripting.removeCSS
 * - chrome.scripting.executeScript
 * - chrome.scripting.registerContentScript
 * - chrome.scripting.unregisterContentScript
 * - chrome.tabs.create
 * - chrome.tabs.executeScript
 * - chrome.tabs.insertCSS
 * - chrome.windows.create
 * - chrome.sidePanel.setOptions
 * - chrome.notifications.create
 */
declare class ResolvePlugin {
    readonly manifestPath: string;
    readonly includeList?: IncludeList;
    constructor(options: ResolvePluginInterface);
    apply(compiler: webpack.Compiler): void;
}

export { ResolvePlugin as default };

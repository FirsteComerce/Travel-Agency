var p='Could not resolve file path. Ensure the file exists in the "public" or "pages" directory.';function l(r){return console.error(`Could not resolve path ${r}. Either add it to the "public" directory or create a page in the "pages" directory.`),r}function a(r){return`Could not resolve path ${r}. Either add it to the "public" directory or create a script in the "scripts" directory.`}function d(r){return`Could not resolve path ${r}. If you want to preserve this file path, add the file to the "public" directory.`}var c={notFoundError:p,resolverHtmlError:l,resolverJsError:a,resolverStaticError:d};function g(){return console.error(c.notFoundError),""}function u(r){let n=r.split("/"),t=[];for(let s of n)s===".."||s==="."||s!==""&&t.push(s);return t.join("/")}function y(r){return r?.endsWith(".html")?(console.error(c.resolverHtmlError(r)),r):r?.endsWith(".js")?(console.error(c.resolverJsError(r)),r):(console.error(c.resolverStaticError(r)),r)}var f={data:"__RESOLVER_MODULE_FILE_LIST__"};function e(r){if(!r)return g();if(r?.startsWith("http")||r?.startsWith("chrome://"))return r;if(r?.startsWith("chrome-extension://")){let s=chrome.runtime.getURL("");if(r.startsWith(s)){let o=r.replace(s,"");return chrome.runtime.getURL(e(o))}return r}if(r?.startsWith("/_favicon"))return r;let n=Object.entries(f.data).find(([s,o])=>{let i=u(r);return o===i||o===`pages/${i}`||o===`scripts/${i}`?s:!1}),t=u(r);return t.includes("public/")?"/"+t:n&&n.length?n[0]:(y(r),r)}function h(r){if(typeof r=="string")return e(r);let n=t=>({...t,...t?.path&&{path:typeof t.path=="string"?e(t.path):Object.entries(t.path).reduce((s,[o,i])=>(s[o]=e(i),s),{})},...t?.popup&&{popup:e(t.popup)},...t?.url&&{url:e(t.url)},...t?.iconUrl&&{iconUrl:e(t.iconUrl)},...t?.files&&{files:t.files.map(s=>e(s))},...t?.js&&{js:Array.isArray(t.js)?t.js.map(s=>e(s)):t.js},...t?.css&&{css:Array.isArray(t.css)?t.css.map(s=>e(s)):t.css}});return Array.isArray(r)?r.map(t=>n(t)):{...n(r||{})}}var m={solve:h};export{m as default};

import webpack from 'webpack';

interface ManifestPluginInterface {
    manifestPath: string;
    exclude?: string[];
    browser?: string;
}

declare class ManifestPlugin {
    readonly browser?: string;
    readonly manifestPath: string;
    readonly exclude?: string[];
    constructor(options: ManifestPluginInterface);
    /**
     * ManifestPlugin is responsible for handling the manifest.json file.
     * It ensures that the files defined in the manifest have valid paths,
     * throwing errors if they don't. It also ensures the manifest is emitted
     * to the assets bundle, so other plugins can modify it, and stored
     * as file dependency so webpack can watch and trigger changes.
     *
     * The plugin also has a guard against recompiling entrypoints
     * at runtime, throwing an error if any of those files change.
     */
    apply(compiler: webpack.Compiler): void;
}

export { ManifestPlugin as default };
